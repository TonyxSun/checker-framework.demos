"LONG TALK" proposal

> Title of the presentation (max. 50 characters including spaces)

Your last null pointer exception

> Name(s) and affiliation(s) of the presenter(s)

Michael D. Ernst
University of Washington

> Abstract (max. 750 characters including spaces)

This talk will explain why null pointer exceptions happen and how to avoid them.

Null pointer exceptions are common because it is difficult to reason about all the different ways that null is used, from fields that haven't been initialized yet, to terminators in linked lists, to error codes, to other special values.

We will tell you which uses of the null value valuable and which ones are evil.  We will present patterns that simplify your code, helping you use null sparingly and responsibly.  And, most important of all, we will present open-source tools that check your code at compile time.  These tools ensure that your code uses the null value correctly, and they guarantee that your code never suffers a null pointer exception.

> Description of the general topic/problem, why visitors should attend the presentation, including highlights of the technologies/concepts the presentation will cover. Please make the main arguments of your proposed presentation clear and explain why your topic is important.

Null pointer exceptions are the bane of Java programmers.

It is challenging even for a skilled programmer to avoid null pointer exceptions.  This talk will explain why it is so hard, and will provide participants with tools that make writing correct code much easier.

Null pointer exceptions are common because it is difficult to reason about all the different ways that null is used.  These uses include initialization, data structure terminators, method return codes, and other special cases.  It’s almost inevitable that a programmer trying to keep all this straight will make mistakes.  But a programmer shouldn’t have to: instead, the compiler should warn you about your errors.

This talk will discuss different uses of the null value, including those noted above and more.  We will discuss subtleties related to:

- static fields
- initialization
- map keys
- side effects
- pre- and post-condition contracts

Throughout, we will demonstrate a sound methodology for reasoning about these features to guarantee lack of null pointer exceptions.  In many cases, this includes a discussion how to replace complex paradigms by simpler ones.

Then, we will demonstrate how to embed this methodology in a compiler, making use of the Java type system in a way that is compatible with all of your existing code.  You can use a standard Java compiler, together with a tool called the Checker Framework (freely available at http://checkerframework.org/), to give a guarantee of no null pointer exceptions.  This toolset is used daily at Google, and of course at many other companies.

 
> Keywords:

null pointer exception, map keys, initialization, pre- and post-conditions, design by contract

> Prerequisites for your audience: e.g. knowledge/experience in project management, etc.

This talk is appropriate for any programmer who wants to produce reliable, easy-to-understand code.

> Short biography of presenter(s)

Michael Ernst loves programmers and wants to make their lives better.  He builds programming tools and was the specification lead for JSR-308, which extended Java's annotation syntax.

As a professor at the University of Washington, his research aims to make software more reliable, more secure, and easier (and more fun!) to produce.  Ernst's research combines strong theoretical foundations with realistic experimentation, with an eye to changing the way that software developers work.
He publishes in software engineering, programming languages, type theory, security, program analysis, bug prediction, testing, and verification. 

Dr. Ernst was previously a developer at Microsoft, a researcher at Microsoft Research, and a tenured professor at MIT.

> Link to an online video of the main speaker presenting the abstract of the talk in English. This helps us rate the presenter’s speaking skills. The video will be publicly available for community rating and in the online conference program
> 
> Photo(s) of the main presenter(s) for publication in the program,
>  at least 800×600 pixels, 300dpi, 4×3 (HxW) aspect ratio

mernst-headshot-200307-2-cropped-4x3.jpg
[currently in homedir, move it]

> Contact information of the main presenter (postal address, email address, phone and fax numbers)

Michael Ernst
UW Computer Science & Engineering
Box 352350, 185 Stevens Way
Seattle, WA  98195-2350
USA

mernst@cs.washington.edu

phone: +1-206-221-0965
fax: +1-206-616-3804
